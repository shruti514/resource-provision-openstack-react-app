{"version":3,"sources":["nova.js"],"names":[],"mappings":";AACA,IAAI,IAAI,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;;AAEvE,IAAI,MAAM,GAAG,IAAI,IAAI,CAAC;AACd,OAAG,EAAE,6BAA6B;AAClC,SAAK,EAAE,IAAI;CACd,CAAC,CAAC,YAAY,CAAC;AACZ,YAAQ,EAAE,OAAO;AACjB,YAAQ,EAAE,kBAAkB;AAC5B,WAAO,EAAE,OAAO;AAChB,SAAK,EAAE,KAAK;CACf,CAAC,CAAC;;AAEP,IAAI,cAAc,GAAG,CAAC,GAAG,EAAC,GAAG,EAAC,IAAI,KAAI;AAClC,UAAM,CAAC,OAAO,CAAC,GAAG,CAAC,EAAC,KAAK,EAAC,KAAK,EAAC,EAAC,UAAS,GAAG,EAAC,OAAO,EAAC;AAClD,YAAI,QAAQ,GAAC,EAAE,CAAC;AAChB,eAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAC,KAAK,KAAG;AACxB,gBAAI,IAAI,GAAG;AACP,kBAAE,EAAC,MAAM,CAAC,EAAE;AACZ,oBAAI,EAAC,MAAM,CAAC,IAAI;AAChB,sBAAM,EAAE,MAAM,CAAC,MAAM;AACrB,qBAAK,EAAC,MAAM,CAAC,KAAK,CAAC,EAAE;AACrB,sBAAM,EAAC,MAAM,CAAC,MAAM,CAAC,EAAE;aAC1B,CAAA;AACD,oBAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;SACtB,CAAC,CAAC;AACH,WAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACtB,CAAC,CAAA;CACL,CAAA;;AAED,IAAI,cAAc,GAAG,CAAC,GAAG,EAAC,GAAG,EAAC,IAAI,KAAI;AAClC,UAAM,CAAC,OAAO,CAAC,GAAG,CAAC,EAAC,KAAK,EAAC,KAAK,EAAC,EAAC,UAAS,GAAG,EAAC,OAAO,EAAC;AAClD,YAAI,QAAQ,GAAC,EAAE,CAAC;AAChB,eAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAC,KAAK,KAAG;AACxB,gBAAI,IAAI,GAAG;AACP,kBAAE,EAAC,MAAM,CAAC,EAAE;AACZ,oBAAI,EAAC,MAAM,CAAC,IAAI;AAChB,mBAAG,EAAE,MAAM,CAAC,GAAG;AACf,qBAAK,EAAC,MAAM,CAAC,KAAK;AAClB,oBAAI,EAAC,MAAM,CAAC,IAAI;AAChB,oBAAI,EAAC,MAAM,CAAC,IAAI;aACnB,CAAA;AACD,oBAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACvB,CAAC,CAAC;AACH,WAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACtB,CAAC,CAAA;CACL,CAAA;;AAED,OAAO,CAAC,cAAc,GAAG,cAAc,CAAC;AACxC,OAAO,CAAC,cAAc,GAAG,cAAc,CAAC","file":"nova-compiled.js","sourcesContent":["\nvar Nova = require(\"openclient\").getAPI('openstack', 'compute', '1.1');\n\nvar client = new Nova({\n        url: 'http://localhost:5000/v2.0/',\n        debug: true\n    }).authenticate({\n        username: 'admin',\n        password: '058b9a27e4304b56',\n        project: 'admin',\n        async: false\n    });\n\nvar findAllServers = (req,res,next) =>{\n    client.servers.all({async:false},function(err,servers){\n        var toReturn=[];\n        servers.map((server,index)=>{\n            var temp = {\n                id:server.id,\n                name:server.name,\n                status: server.status,\n                image:server.image.id,\n                flavor:server.flavor.id\n            }\n            toReturn.push(temp)\n        });\n        res.send(toReturn);\n    })\n}\n\nvar findAllFlavors = (req,res,next) =>{\n    client.flavors.all({async:false},function(err,flavors){\n        var toReturn=[];\n        flavors.map((flavor,index)=>{\n            var temp = {\n                id:flavor.id,\n                name:flavor.name,\n                ram: flavor.ram,\n                vcpus:flavor.vcpus,\n                disk:flavor.disk,\n                swap:flavor.swap\n            }\n            toReturn.push(temp);\n        });\n        res.send(toReturn);\n    })\n}\n\nexports.findAllServers = findAllServers;\nexports.findAllFlavors = findAllFlavors;"]}